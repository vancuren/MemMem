[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "memorybank"
version = "0.1.0"
authors = [
    {name = "MemoryBank Development Team", email = "support@memorybank.dev"},
]
description = "Long-term memory system for conversational AI agents"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["memory", "ai", "llm", "embeddings", "vector-database", "chatbot"]

dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
local = [
    "chromadb>=0.4.18",
    "openai>=1.3.0",
    "sentence-transformers>=2.2.0",
]
llm = [
    "anthropic>=0.7.0",
    "openai>=1.3.0",
    "google-generativeai>=0.3.0",
]
server = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "apscheduler>=3.10.0",
    "python-multipart>=0.0.6",
]
cli = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
]
all = [
    "memorybank[local,llm,server,cli]",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/memorybank/memorybank-python"
Documentation = "https://memorybank.readthedocs.io"
Repository = "https://github.com/memorybank/memorybank-python"
"Bug Tracker" = "https://github.com/memorybank/memorybank-python/issues"

[project.scripts]
memorybank = "memorybank.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["memorybank*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
memorybank = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["memorybank"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["memorybank"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]